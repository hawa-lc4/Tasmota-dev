/*
  user_config_override.h - user configuration overrides my_user_config.h for Tasmota

  Copyright (C) 2021  Theo Arends

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _USER_CONFIG_OVERRIDE_H_
#define _USER_CONFIG_OVERRIDE_H_

/*****************************************************************************************************\
 * USAGE:
 *   To modify the stock configuration without changing the my_user_config.h file:
 *   (1) copy this file to "user_config_override.h" (It will be ignored by Git)
 *   (2) define your own settings below
 *
 ******************************************************************************************************
 * ATTENTION:
 *   - Changes to SECTION1 PARAMETER defines will only override flash settings if you change define CFG_HOLDER.
 *   - Expect compiler warnings when no ifdef/undef/endif sequence is used.
 *   - You still need to update my_user_config.h for major define USE_MQTT_TLS.
 *   - All parameters can be persistent changed online using commands via MQTT, WebConsole or Serial.
\*****************************************************************************************************/

// wird in diesem Projekt nicht benutzt
#include "user_private_data.h"               // not sharing sensible data with the global community; hawa-lc4 (M1)
// don't forget to check and modify the file above!

// #ifdef %identifier%
// #undef %identifier%
// #endif
// #define %identifier%   %the_new_value%

#ifdef PROJECT
#undef PROJECT
#endif
#define PROJECT               "BMX-LightControl"

#ifdef MY_RULE
  #error **** Build SCRIPT only! ****
#endif // MY_RULE

#ifdef MY_SCRIPT
  // #warning **** Build: SCRIPT ****
  #undef CODE_IMAGE_STR
  #define CODE_IMAGE_STR "hawa-lc4_BMX-LightControl"

  #ifdef USE_RULES
  #undef USE_RULES
  #endif

  #undef USE_TIMERS
  #undef USE_TIMERS_WEB
  #undef USE_SUNRISE

  #ifndef USE_SCRIPT
  #define USE_SCRIPT
  #define USE_SCRIPT_SERIAL
  #define USE_SCRIPT_TIMERS
  // #define USE_SCRIPT_SUB_COMMAND
  #define USE_SCRIPT_GLOBVARS
  // #define USE_SCRIPT_JSON_EXPORT
  // #define USE_SCRIPT_I2C
  // #define USE_SCRIPT_ONEWIRE
  // #define USE_SCRIPT_SPI
  // #define USE_SCRIPT_TCP_SERVER
  #define USE_SCRIPT_WEB_DISPLAY
  #define USE_BUTTON_EVENT
  #define SCRIPT_POWER_SECTION
  #define START_SCRIPT_FROM_BOOT      // https://tasmota.github.io/docs/Scripting-Language/
  #define USER_BACKLOG "Script 1"     // hier nur script aktivieren, sonst nichts! Siehe https://tasmota.github.io/docs/Compile-your-build/#user_backlog
  #endif    // USE_SCRIPT

  #define PRECONFIGURED_SCRIPT \
  ">D\n\n" \
  ">B\n->SetOption0 0\n" \
    "\n" \
  ">R\n=>Hostname BMX-LightControl\n\n"
  
/*    32 Zeichen Skript; 8160 Zeichen übrig von 8192
      https://tasmota.github.io/docs/Commands/#setoptions
      SetOption0 	- Save power state and use after restart (=SaveState); 0 = disable
      SetOption73 - Decouple buttons from controlling power outputs; 1 = decoupled
*/
#endif // MY_SCRIPT

#ifdef USER_TEMPLATE
#undef USER_TEMPLATE
#endif


#ifdef LUATOS_ESP32C3     // Luatos-ESP32C3 board mit AIR101-LCD Modul
  #error **** ESP32C3 will not build at the moment! ****
#endif

/*  Espressif ESP Modules:  https://www.espressif.com/en/products/modules  */
#ifdef ESP8266
  #error **** Build ESP32 only! ****
#endif    // ESP8266


#ifdef ESP32
#ifndef LUATOS_ESP32C3
#ifdef USE_BERRY
#undef USE_BERRY
#endif
// #define USE_BERRY_DEBUG             // Compile Berry bytecode with line number information, makes exceptions easier to debug. Adds +8% of memory consumption for compiled code

//  User Template ScratchPad:                            [0,0,544,0,0,6272,0,0,0,288,289,290,0,0,736,672,0,640,608,704,0,0,6112,0,0,0,0,0,224,225,32,33,0,0,0,0]
#define USER_TEMPLATE "{\"NAME\":\"CORE-ESP32\",\"GPIO\":[0,0,544,0,0,6272,0,0,0,288,289,290,0,0,736,672,0,640,608,704,0,0,6112,0,0,0,0,0,224,225,32,33,0,0,0,0],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
/*  User Template ScratchPad:                            [0,1,2  ,3,4,5   ,-,-,12,13,14 ,15 ,16,17,18,19,0,21 ,22 ,23 ,0,25,26,27,-,-,-,-,32 ,33 ,34,35,36,0,0,39]
  ESP32 template GPIO pin mapping:  https://github.com/arendst/Tasmota/discussions/19000
        [0,1,2,3,4,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,6,7,8,11,32,33,34,35,36,37,38,39]
  https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
  GPIO00 Taster gegen GND (kann damit auch zum FlashBoot benutzt werden) -- 0      // 
  GPIO01 TX UART0                                                        -- 0      // belegt durch USB
  GPIO02 (hat die interne LED gegen VCC)                                 -- 544    // LedLink
  GPIO03 RX UART0                                                        -- 0      // belegt durch USB
  GPIO04                                                                 -- 0      // 
  GPIO05 VSPI CS0                                                        -- 6272   // RC522 CS
  GPIO09 DO NOT USE!!   (SDData2)                                        -- 0      // DO NOT USE!!
  GPIO10 DO NOT USE!!   (SDData3)                                        -- 0      // DO NOT USE!!
  GPIO12 HSPI MISO                                                       -- 0      // 
  GPIO13 HSPI MOSI                                                       -- 288    // LED1 (rot)
  GPIO14 HSPI CLK                                                        -- 289    // LED2 (grün)
  GPIO15 HSPI CS0                                                        -- 290    // LED3 (blau)
  GPIO16 RX UART2                                                        -- 0      // 
  GPIO17 TX UART2                                                        -- 0      // 
  GPIO18 VSPI CLK                                                        -- 736    // SPI CLK1
  GPIO19 VSPI MISO                                                       -- 672    // SPI MISO1
  GPIO20 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO21 I2C SDA (640)                                                   -- 640    // I2C SDA
  GPIO22 I2C SCL (608)                                                   -- 608    // I2C SCL
  GPIO23 VSPI MOSI                                                       -- 704    // SPI MOSI1
  GPIO24 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO25                                                                 -- 0      // 
  GPIO26                                                                 -- 6112   // RC522 Reset
  GPIO27                                                                 -- 0      // 
  GPIO06 DO NOT USE!!   (SDCLK)                                          -- 0      // DO NOT USE!!
  GPIO07 DO NOT USE!!   (SDData0)                                        -- 0      // DO NOT USE!!
  GPIO08 DO NOT USE!!   (SDData1)                                        -- 0      // DO NOT USE!!
  GPIO11 DO NOT USE!!   (SDCMD)                                          -- 0      // DO NOT USE!!
  GPIO32                                                                 -- 224    // Relay1
  GPIO33                                                                 -- 225    // Relay2
  GPIO34 (input only)                                                    -- 32     // Button1
  GPIO35 (input only)                                                    -- 33     // Button2
  GPIO36 (input only)                                                    -- 0      // 
  GPIO37 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO38 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO39 (input only)                                                    -- 0      // 
Nicht jedes Board hat alle GPIOs verfügbar!
  GPIO00 fehlt auf dem DEVKIT V1 – DOIT 30-Pin Board und ist nur durch den boot-Taster am Board bedienbar.
  Das DEVKIT V1 – DOIT 30-Pin Board verwendest Standardmäßig den VSPI.
Aufpassen bei VSPI und HSPI; die sind nicht immmer auf allen Boards gleich definiert! VSPI ist üblicherweise der Standard SPI Bus.
Strapping Pins:   The ESP32 chip has the following strapping pins:
    GPIO 0 (must be LOW to enter boot mode)
    GPIO 2 (must be floating or LOW during boot)
    GPIO 5 (must be HIGH during boot)
    GPIO 12 (must be LOW during boot)
    GPIO 15 (must be HIGH during boot)
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
// #define ADC_LOG

// #define USE_BERRY_DEBUG                          // Compile Berry bytecode with line number information, makes exceptions easier to debug. Adds +8% of memory consumption for compiled code
#endif    // LUATOS_ESP32C3
#endif    // ESP32

#define GUI_EDIT_FILE
#define GUI_TRASH_FILE

#ifdef TELE_PERIOD
#undef TELE_PERIOD
#endif
#define TELE_PERIOD             300              // [TelePeriod] Telemetry (0 = disable, 10 - 3600 seconds)

#ifndef USE_SPI
#define USE_SPI
#endif

#define USE_RC522                              // Add support for MFRC522 13.56Mhz Rfid reader (+6k code)
  #define USE_RC522_DATA_FUNCTION              // Add support for reading data block content (+0k4 code)

#ifndef USE_I2C
#define USE_I2C                              // I2C using library wire (+10k code, 0k2 mem, 124 iram)
#endif

#define USE_RTC_CHIPS                          // Enable RTC chip support and NTP server - Select only one
  #define USE_DS3231                           // [I2cDriver26] Enable DS3231 RTC (I2C address 0x68) (+1k2 code)

#ifdef MODULE
#undef MODULE
#endif
#define MODULE                 USER_MODULE

// #ifdef WIFI_AP_PASSPHRASE
// #undef WIFI_AP_PASSPHRASE
// #endif
// #define WIFI_AP_PASSPHRASE     "BMX!light"                // AccessPoint passphrase. For WPA2 min 8 char, for open use "" (max 63 char).

// #ifdef WIFI_CONFIG_TOOL
// #undef WIFI_CONFIG_TOOL
// #endif
// #define WIFI_CONFIG_TOOL       WIFI_MANAGER_RESET_ONLY        // [WifiConfig] Default tool if Wi-Fi fails to connect (default option: 4 - WIFI_RETRY)

// #ifdef NTP_SERVER1
// #undef NTP_SERVER1
// #endif
// #define NTP_SERVER1            ""

// #ifdef NTP_SERVER2
// #undef NTP_SERVER2
// #endif
// #define NTP_SERVER2            ""

// #ifdef NTP_SERVER3
// #undef NTP_SERVER3
// #endif
// #define NTP_SERVER3            ""

#ifdef MQTT_USE
#undef MQTT_USE
#endif
#define MQTT_USE               false

#ifdef MQTT_TOPIC
#undef MQTT_TOPIC
#endif
#define MQTT_TOPIC             PROJECT

// #ifndef SUPPORT_MQTT_EVENT
// #define SUPPORT_MQTT_EVENT                     // Support trigger event with MQTT subscriptions (+3k5 code)
// #endif

#ifdef FRIENDLY_NAME
#undef FRIENDLY_NAME
#endif
#define FRIENDLY_NAME          PROJECT

#ifdef GUI_SHOW_HOSTNAME
#undef GUI_SHOW_HOSTNAME
#endif
#define GUI_SHOW_HOSTNAME      false             // [SetOption53] Show hostname and IP address in GUI main menu

#ifdef APP_TIMEZONE
#undef APP_TIMEZONE
#endif
#define APP_TIMEZONE           99     // https://tasmota-tz.netlify.app/

#ifdef MY_LANGUAGE
#undef MY_LANGUAGE
#endif
#define MY_LANGUAGE            de_DE

#ifdef USE_DEEPSLEEP
#undef USE_DEEPSLEEP                              
#endif 

#ifdef USE_DOMOTICZ
#undef USE_DOMOTICZ                              
#endif 

#ifdef USE_EMULATION_HUE
#undef USE_EMULATION_HUE
#endif

#ifdef USE_EMULATION_WEMO
#undef USE_EMULATION_WEMO
#endif

#ifdef USE_TELEGRAM
#undef USE_TELEGRAM
#endif

#ifdef USE_KNX
#undef USE_KNX
#endif

#ifdef USE_SONOFF_RF
#undef USE_SONOFF_RF
#endif

#ifdef ROTARY_V1
#undef ROTARY_V1
#endif

#ifdef USE_SONOFF_SC
#undef USE_SONOFF_SC
#endif

#ifdef USE_TUYA_MCU
#undef USE_TUYA_MCU
#endif

#ifdef USE_ARMTRONIX_DIMMERS
#undef USE_ARMTRONIX_DIMMERS
#endif

#ifdef USE_PS_16_DZ
#undef USE_PS_16_DZ
#endif

#ifdef USE_SONOFF_IFAN
#undef USE_SONOFF_IFAN
#endif

#ifdef USE_BUZZER
#undef USE_BUZZER
#endif

#ifdef USE_ARILUX_RF
#undef USE_ARILUX_RF
#endif

#ifdef USE_SHUTTER
#undef USE_SHUTTER
#endif

#ifdef USE_EXS_DIMMER
#undef USE_EXS_DIMMER
#endif

#ifdef USE_DEVICE_GROUPS
#undef USE_DEVICE_GROUPS
#endif

#ifdef USE_PWM_DIMMER
#undef USE_PWM_DIMMER
#endif

#ifdef USE_SONOFF_D1
#undef USE_SONOFF_D1
#endif

#ifdef USE_SHELLY_DIMMER
#undef USE_SHELLY_DIMMER
#endif

#ifdef USE_LIGHT
#undef USE_LIGHT
#endif

#ifdef USE_WS2812
#undef USE_WS2812
#endif

#ifdef USE_MY92X1
#undef USE_MY92X1
#endif

#ifdef USE_SM16716
#undef USE_SM16716
#endif

#ifdef USE_SM2135
#undef USE_SM2135
#endif

#ifdef USE_SM2335
#undef USE_SM2335
#endif

#ifdef USE_BP1658CJ
#undef USE_BP1658CJ
#endif

#ifdef USE_BP5758D
#undef USE_BP5758D
#endif

#ifdef USE_SONOFF_L1
#undef USE_SONOFF_L1
#endif

#ifdef USE_ELECTRIQ_MOODL
#undef USE_ELECTRIQ_MOODL
#endif

#ifdef USE_LIGHT_PALETTE
#undef USE_LIGHT_PALETTE
#endif

#ifdef USE_LIGHT_VIRTUAL_CT
#undef USE_LIGHT_VIRTUAL_CT
#endif

#ifdef USE_DGR_LIGHT_SEQUENCE
#undef USE_DGR_LIGHT_SEQUENCE
#endif

#ifdef USE_AC_ZERO_CROSS_DIMMER
#undef USE_AC_ZERO_CROSS_DIMMER
#endif

#ifdef USE_DS18x20
#undef USE_DS18x20
#endif

// #ifdef USE_I2C
// #undef USE_I2C
// #endif

// #ifndef LUATOS_ESP32C3
// #ifdef USE_SPI
// #undef USE_SPI
// #endif
// #endif    // LUATOS_ESP32C3

#ifdef USE_SERIAL_BRIDGE
#undef USE_SERIAL_BRIDGE
#endif

#ifdef USE_ENERGY_SENSOR
#undef USE_ENERGY_SENSOR
#endif

#ifdef USE_ENERGY_DUMMY
#undef USE_ENERGY_DUMMY
#endif

#ifdef USE_HLW8012
#undef USE_HLW8012
#endif

#ifdef USE_CSE7766
#undef USE_CSE7766
#endif

#ifdef USE_PZEM004T
#undef USE_PZEM004T
#endif

#ifdef USE_PZEM_AC
#undef USE_PZEM_AC
#endif

#ifdef USE_PZEM_DC
#undef USE_PZEM_DC
#endif

#ifdef USE_MCP39F501
#undef USE_MCP39F501
#endif

#ifdef USE_BL09XX
#undef USE_BL09XX
#endif

#ifdef USE_DHT
#undef USE_DHT
#endif

#ifdef USE_IR_REMOTE
#undef USE_IR_REMOTE
#endif

#ifdef USE_ADE7953
#undef USE_ADE7953
#endif

#endif  // _USER_CONFIG_OVERRIDE_H_
