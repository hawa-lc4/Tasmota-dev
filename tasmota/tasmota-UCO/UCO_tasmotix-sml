/*
  user_config_override.h - user configuration overrides my_user_config.h for Tasmota

  Copyright (C) 2021  Theo Arends

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _USER_CONFIG_OVERRIDE_H_
#define _USER_CONFIG_OVERRIDE_H_

/*****************************************************************************************************\
 * USAGE:
 *   To modify the stock configuration without changing the my_user_config.h file:
 *   (1) copy this file to "user_config_override.h" (It will be ignored by Git)
 *   (2) define your own settings below
 *
 ******************************************************************************************************
 * ATTENTION:
 *   - Changes to SECTION1 PARAMETER defines will only override flash settings if you change define CFG_HOLDER.
 *   - Expect compiler warnings when no ifdef/undef/endif sequence is used.
 *   - You still need to update my_user_config.h for major define USE_MQTT_TLS.
 *   - All parameters can be persistent changed online using commands via MQTT, WebConsole or Serial.
\*****************************************************************************************************/

// #include "user_private_data.h"               // not sharing sensible data with the global community; hawa-lc4 (M1) // not requiered in this project!
// don't forget to check and modify the file above!

// #ifdef %identifier%
// #undef %identifier%
// #endif
// #define %identifier%   %the_new_value%

#ifdef PROJECT
#undef PROJECT
#endif
#define PROJECT               "tasmotix-sml"

#ifdef MY_RULE
  #error **** Build: SCRIPT only! ****
#endif // MY_RULE

#ifdef MY_SCRIPT
  // #warning **** Build: SCRIPT ****
  #undef CODE_IMAGE_STR
  #define CODE_IMAGE_STR "MY_SCRIPT_SML"

  #undef USE_RULES
  #undef USE_TIMERS
  #undef USE_TIMERS_WEB
  #undef USE_SUNRISE

  #define USE_SCRIPT

  #define USE_SCRIPT_SERIAL
  #define USE_SCRIPT_TIMERS
  // #define USE_SCRIPT_SUB_COMMAND
  #define USE_SCRIPT_GLOBVARS
  // #define USE_SCRIPT_JSON_EXPORT
  #define USE_SCRIPT_WEB_DISPLAY
  #define USE_BUTTON_EVENT
  // #define SCRIPT_POWER_SECTION
  #define START_SCRIPT_FROM_BOOT      // https://tasmota.github.io/docs/Scripting-Language/
  #define USER_BACKLOG "Script 1"     // hier nur script aktivieren, sonst nichts!

  // logging to SDCard: https://github.com/arendst/Tasmota/discussions/13938
  // Smart Meter Interface: https://tasmota.github.io/docs/Smart-Meter-Interface/

  #define PRECONFIGURED_SCRIPT \
  ">D 48\n" \
    "fr=0\nres=0\ncnt=0\nstr=\"\"\nM:msmP=0 60\n" \
    "smP=0\nsmI=0\nsmO=0\n" \
    "i:tim1=0\ni:tim2=0\n" \
  ">B\n=>SerialConfig 8N1\n=>Power ON\n=>sensor53 r\n" \
    "; list all files in root directory\n" \
    "fr=fo(\"/\" 0)\nfor cnt 1 20 1\nres=fr(str fr)\nif res>0\nthen\nprint %cnt% : %str%\nelse\nbreak\nendif\nnext\nfc(fr)\n" \
  ">R\n=>Hostname tasmotix-sml\n" \
  ">S\n->DisplayText [zs2]script\n->DisplayText [l2c1]waehlen!"
  // Muster-Skripte liegen in Verzeichnis data4tasmotix-sml

  /* script core for eBZ DD3 (OBIS ASCII); script.dd3a
  ">B\n=>SerialConfig 7E1\n=>Power ON\n=>sensor53 r\n" \
  ">R\n=>Hostname tasmotix-sml\n=>FriendlyName1 eBz_DD3_OBIS-ASCII\n" \
  ">M 1\n+1,3,o,0,9600,Haus,-1\n" \
    "1,1-0:1.8.0*255(@1,Energie Import,kWh,E_In,2\n" \
    "1,1-0:2.8.0*255(@1,Energie Export,kWh,E_Out,2\n" \
    "1,1-0:16.7.0*255(@1,Leistung ges.,W,P_Cur,0\n" \
    "1,1-0:36.7.0*255(@1,Leistung L1,W,P_L1,0\n" \
    "1,1-0:56.7.0*255(@1,Leistung L2,W,P_L2,0\n" \
    "1,1-0:76.7.0*255(@1,Leistung L3,W,P_L3,0\n" \
  */

  /* script core for EMH ED300L (SML); script.ed300l
  ">B\n=>SerialConfig 8N1\n=>Power ON\n=>sensor53 r\n" \
  ">R\n=>Hostname tasmotix-sml\n=>FriendlyName1 EMH_ED300L_SML\n" \
  ">M 1\n+1,3,s,0,9600,Haus,-1\n" \
    "1,77070100010800FF@1000,Energie Import,kWh,E_In,2\n" \
    "1,77070100020800FF@1000,Energie Export,kWh,E_Out,2\n" \
    "1,77070100100700FF@1,Leistung ges.,W,P_Cur,0\n" \
  */

 /* script core for S0 counter type  (https://www.mikrocontroller.net/topic/559786#7502283)
  ">B\n=>Power ON\n=>sensor53 r\n" \
  ">R\n=>Hostname tasmotix-sml\n=>FriendlyName1 S0_Counter\n" \
  ">M 1\n+1,2,c,1,-10,S0\n" \
    "1=h______________________________\n" \
    "1,1-0:1.7.0*255(@16,67,Leistung,kW,Power_actual,3\n" \
    "1,1-0:1.8.0*255(@1000,Energie total,kWh,E_ges,3\n" \
    "1,1-0:1.8.0*255(@1000,Tagesverbrauch,kWh,E_day,3\n" \
    "1,1-0:1.8.0*255(@1000,Wochenverbrauch,kWh,E_week,3\n" \
    "1,1-0:1.8.0*255(@1000,Monatsverbrauch,kWh,E_month,3\n" \
    "1,1-0:1.8.0*255(@1000,Jahresverbrauch,kWh,E_year,3\n" \
*/

// 350 Zeichen Skript; 7500 Zeichen übrig von 8192
#endif // MY_SCRIPT

#ifdef USER_TEMPLATE
#undef USER_TEMPLATE
#endif

#ifdef ESP8266
#define USER_TEMPLATE "{\"NAME\":\"tasmotix-sml\",\"GPIO\":[32,0,544,0,640,608,0,0,672,704,736,6240,0,0],\"FLAG\":0,\"BASE\":18,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp8266-pinout-reference-gpios
    GPIO0  Taster gegen GND (kann damit auch zum FlashBoot benutzt werden) -- 32     // Taster
    GPIO1  TX UART0                                                        -- 0      // SML data
    GPIO2  hat die interne LED gegen VCC; Funktion LedLink (544; _i: 576)  -- 544    // LedLink
    GPIO3  RX UART0                                                        -- 0      // SML data
    GPIO4  I2C SDA (640)                                                   -- 640    // Display
    GPIO5  I2C SCL (608)                                                   -- 608    // Display
    GPIO9  DO NOT USE!!                                                    -- 0      // DO NOT USE!!
    GPIO10 DO NOT USE!!                                                    -- 0      // DO NOT USE!!
    GPIO12 SPI MISO (672)                                                  -- 672    // SDCard
    GPIO13 SPI MOSI (704)                                                  -- 704    // SDCard
    GPIO14 SPI CLK  (736)                                                  -- 736    // SDCard
    GPIO15 SPI SS (768) - SDCard CS (6240)                                 -- 6240   // SDCard
    GPIO16 (wake-up aus dem deep-sleep Modus: 4096)                        -- 0      // 
    GPIO17 ist der AD0 (CT Power: 4896)                                    -- 0      // 

  Tasmota SML verwendet den Hardware UART0; eine entsprechende Konfiguration der GPIO im template ist nicht nötig.
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
#define hawa_LOG               false
#define USE_UFILESYS
#define UFSYS_SIZE 8192
#else
  #error **** Build: ESP8266 only! ****
#endif    // ESP8266

#define USE_SML_M
#define SML_REPLACE_VARS
// #define NO_USE_SML_TCP
#define NO_USE_SML_DECRYPT

#ifdef MAX_METERS
#undef MAX_METERS
#endif
#define MAX_METERS                1

#ifdef TELE_PERIOD
#undef TELE_PERIOD
#endif
#define TELE_PERIOD               300

#define USE_SPI                              // Hardware SPI using GPIO12(MISO), GPIO13(MOSI) and GPIO14(CLK) in addition to two user selectable GPIOs(CS and DC)
#define USE_SDCARD                           // mount SD Card, requires configured SPI pins and setting of `SDCard CS` gpio
#undef USE_MIBLE
#undef USE_DISPLAY_ILI9341

#define GUI_EDIT_FILE
#define GUI_TRASH_FILE

#define USE_I2C                              // I2C using library wire (+10k code, 0k2 mem, 124 iram)
#define USE_DISPLAY
#define USE_DISPLAY_SSD1306                  // [DisplayModel 2] [I2cDriver4] Enable SSD1306 Oled 128x64 display (I2C addresses 0x3C and 0x3D) (+16k code)
// #define USE_UNIVERSAL_DISPLAY
#undef USE_DISPLAY_MODES1TO5
#undef USE_DISPLAY_LCD
#undef USE_DISPLAY_MATRIX
#undef USE_DISPLAY_SEVENSEG
#undef USE_ADE7953
#undef SHOW_SPLASH

#ifdef MODULE
#undef MODULE
#endif
#define MODULE                 USER_MODULE

#ifdef MQTT_USE
#undef MQTT_USE
#endif
#define MQTT_USE               false

#ifdef MQTT_TOPIC
#undef MQTT_TOPIC
#endif
#define MQTT_TOPIC             PROJECT

#ifdef STA_SSID1
#undef STA_SSID1
#endif
#define STA_SSID1              ""

#ifdef STA_PASS1
#undef STA_PASS1
#endif
#define STA_PASS1              ""

#ifdef STA_SSID2
#undef STA_SSID2
#endif
#define STA_SSID2              "giggerlspeed"         // failsafe to connect with mobile phone

#ifdef STA_PASS2
#undef STA_PASS2
#endif
#define STA_PASS2              "SuperHuhn8"          // failsafe to connect with mobile phone

#ifdef WIFI_AP_PASSPHRASE
#undef WIFI_AP_PASSPHRASE
#endif
#define WIFI_AP_PASSPHRASE     PROJECT

#ifdef WIFI_CONFIG_TOOL
#undef WIFI_CONFIG_TOOL
#endif
#define WIFI_CONFIG_TOOL      WIFI_MANAGER

#ifdef MQTT_HOST
#undef MQTT_HOST
#endif
#define MQTT_HOST              ""

#ifdef FRIENDLY_NAME
#undef FRIENDLY_NAME
#endif
#define FRIENDLY_NAME          PROJECT

#ifdef GUI_SHOW_HOSTNAME
#undef GUI_SHOW_HOSTNAME
#endif
#define GUI_SHOW_HOSTNAME      true

#ifdef NTP_SERVER1
#undef NTP_SERVER1
#endif
#define NTP_SERVER1            "de.pool.ntp.org"
#ifdef NTP_SERVER2
#undef NTP_SERVER2
#endif
#define NTP_SERVER2            ""
#ifdef NTP_SERVER3
#undef NTP_SERVER3
#endif
#define NTP_SERVER3            ""

#ifdef APP_TIMEZONE
#undef APP_TIMEZONE
#endif
#define APP_TIMEZONE           99     // https://tasmota-tz.netlify.app/

#ifdef MY_LANGUAGE
#undef MY_LANGUAGE
#endif
#define MY_LANGUAGE            de_DE

#ifdef WEB_PASSWORD
#undef WEB_PASSWORD
#endif
#define WEB_PASSWORD            ""

#ifdef USE_DEEPSLEEP
#undef USE_DEEPSLEEP                              
#endif 

#ifdef USE_DOMOTICZ
#undef USE_DOMOTICZ                              
#endif 

#ifdef USE_EMULATION_HUE
#undef USE_EMULATION_HUE
#endif

#ifdef USE_EMULATION_WEMO
#undef USE_EMULATION_WEMO
#endif

#ifdef USE_TELEGRAM
#undef USE_TELEGRAM
#endif

#ifdef USE_KNX
#undef USE_KNX
#endif

#ifdef USE_SONOFF_RF
#undef USE_SONOFF_RF
#endif

#ifdef ROTARY_V1
#undef ROTARY_V1
#endif

#ifdef USE_SONOFF_SC
#undef USE_SONOFF_SC
#endif

#ifdef USE_TUYA_MCU
#undef USE_TUYA_MCU
#endif

#ifdef USE_ARMTRONIX_DIMMERS
#undef USE_ARMTRONIX_DIMMERS
#endif

#ifdef USE_PS_16_DZ
#undef USE_PS_16_DZ
#endif

#ifdef USE_SONOFF_IFAN
#undef USE_SONOFF_IFAN
#endif

#ifdef USE_BUZZER
#undef USE_BUZZER
#endif

#ifdef USE_ARILUX_RF
#undef USE_ARILUX_RF
#endif

#ifdef USE_SHUTTER
#undef USE_SHUTTER
#endif

#ifdef USE_EXS_DIMMER
#undef USE_EXS_DIMMER
#endif

#ifdef USE_DEVICE_GROUPS
#undef USE_DEVICE_GROUPS
#endif

#ifdef USE_PWM_DIMMER
#undef USE_PWM_DIMMER
#endif

#ifdef USE_SONOFF_D1
#undef USE_SONOFF_D1
#endif

#ifdef USE_SHELLY_DIMMER
#undef USE_SHELLY_DIMMER
#endif

#ifdef USE_LIGHT
#undef USE_LIGHT
#endif

#ifdef USE_WS2812
#undef USE_WS2812
#endif

#ifdef USE_MY92X1
#undef USE_MY92X1
#endif

#ifdef USE_SM16716
#undef USE_SM16716
#endif

#ifdef USE_SM2135
#undef USE_SM2135
#endif

#ifdef USE_SM2335
#undef USE_SM2335
#endif

#ifdef USE_BP1658CJ
#undef USE_BP1658CJ
#endif

#ifdef USE_BP5758D
#undef USE_BP5758D
#endif

#ifdef USE_SONOFF_L1
#undef USE_SONOFF_L1
#endif

#ifdef USE_ELECTRIQ_MOODL
#undef USE_ELECTRIQ_MOODL
#endif

#ifdef USE_LIGHT_PALETTE
#undef USE_LIGHT_PALETTE
#endif

#ifdef USE_LIGHT_VIRTUAL_CT
#undef USE_LIGHT_VIRTUAL_CT
#endif

#ifdef USE_DGR_LIGHT_SEQUENCE
#undef USE_DGR_LIGHT_SEQUENCE
#endif

#ifdef USE_DS18x20
#undef USE_DS18x20
#endif

#ifdef USE_SERIAL_BRIDGE
#undef USE_SERIAL_BRIDGE
#endif

#ifdef USE_ENERGY_SENSOR
#undef USE_ENERGY_SENSOR
#endif

#ifdef USE_ENERGY_MARGIN_DETECTION
#undef USE_ENERGY_MARGIN_DETECTION
#endif

#ifdef USE_ENERGY_POWER_LIMIT
#undef USE_ENERGY_POWER_LIMIT
#endif

#ifdef USE_ENERGY_DUMMY
#undef USE_ENERGY_DUMMY
#endif

#ifdef USE_HLW8012
#undef USE_HLW8012
#endif

#ifdef USE_CSE7766
#undef USE_CSE7766
#endif

#ifdef USE_PZEM004T
#undef USE_PZEM004T
#endif

#ifdef USE_PZEM_AC
#undef USE_PZEM_AC
#endif

#ifdef USE_PZEM_DC
#undef USE_PZEM_DC
#endif

#ifdef USE_MCP39F501
#undef USE_MCP39F501
#endif

#ifdef USE_BL09XX
#undef USE_BL09XX
#endif

#ifdef USE_DHT
#undef USE_DHT
#endif

#ifdef USE_IR_REMOTE
#undef USE_IR_REMOTE
#endif

#endif  // _USER_CONFIG_OVERRIDE_H_
