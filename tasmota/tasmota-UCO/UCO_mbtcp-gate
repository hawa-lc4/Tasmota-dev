/*
  user_config_override.h - user configuration overrides my_user_config.h for Tasmota

  Copyright (C) 2021  Theo Arends

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _USER_CONFIG_OVERRIDE_H_
#define _USER_CONFIG_OVERRIDE_H_

/*****************************************************************************************************\
 * USAGE:
 *   To modify the stock configuration without changing the my_user_config.h file:
 *   (1) copy this file to "user_config_override.h" (It will be ignored by Git)
 *   (2) define your own settings below
 *
 ******************************************************************************************************
 * ATTENTION:
 *   - Changes to SECTION1 PARAMETER defines will only override flash settings if you change define CFG_HOLDER.
 *   - Expect compiler warnings when no ifdef/undef/endif sequence is used.
 *   - You still need to update my_user_config.h for major define USE_MQTT_TLS.
 *   - All parameters can be persistent changed online using commands via MQTT, WebConsole or Serial.
\*****************************************************************************************************/

#include "user_private_data.h"               // not sharing sensible data with the global community; hawa-lc4 (M1)
// don't forget to check and modify the file above!

// #ifdef %identifier%
// #undef %identifier%
// #endif
// #define %identifier%   %the_new_value%

#ifdef PROJECT
#undef PROJECT
#endif
#define PROJECT               "mbtcp-gate"

#ifdef MY_RULE
  #error **** Build: SCRIPT only ****
#endif // MY_RULE

#ifdef MY_SCRIPT
  // #warning **** Build: SCRIPT ****
  #undef CODE_IMAGE_STR
  #define CODE_IMAGE_STR "MY_SCRIPT_mbtcp-gate"

  #undef USE_RULES
  #undef USE_TIMERS
  #undef USE_TIMERS_WEB
  #undef USE_SUNRISE

  #define USE_SCRIPT

  #define USE_SCRIPT_SERIAL
  #define USE_SCRIPT_TIMERS
  // #define USE_SCRIPT_SUB_COMMAND
  #define USE_SCRIPT_GLOBVARS
  // #define USE_SCRIPT_JSON_EXPORT
  #define USE_SCRIPT_WEB_DISPLAY
  #define USE_BUTTON_EVENT
  #define SCRIPT_POWER_SECTION
  #define START_SCRIPT_FROM_BOOT      // https://tasmota.github.io/docs/Scripting-Language/
  #define USER_BACKLOG "Script 1"     // hier nur script aktivieren, sonst nichts!

#define PRECONFIGURED_SCRIPT \
  ">D 48\ntempS=0\ntempL=35.0\ntempH=45.0\nmF=0\npwmV=0\n" \
    "tE_In=0\ntE_Out=0\ntP_Cur=0\ntP_L1=0\ntP_L2=0\ntP_L3=0\ntU_L1=0\ntU_L2=0\ntU_L3=0\nI_L1=0\nI_L2=0\nI_L3=0\n\n" \
  ">B\n->ModbusBaudrate 9600\n->ModbusSerialConfig 8N1\n->SerialConfig 7E1\n=>sensor53 r\n" \
    "->SetOption64 1\n->PWMRange 255\n=>Publish %topic%PfPhase1 0\n=>Publish %topic%PfPhase2 0\n=>Publish %topic%PfPhase3 0\n\n" \
  ">R\n=>Hostname mbtcp-gate\n\n" \
  ">M 1\n+1,3,o,0,9600,EVU,-1\n" \
    "1,1-0:1.8.0*255(@1,Energie Import,kWh,E_In,2\n" \
    "1,1-0:2.8.0*255(@1,Energie Export,kWh,E_Out,2\n" \
    "1,1-0:16.7.0*255(@1,Leistung ges.,W,P_Cur,0\n" \
    "1,1-0:36.7.0*255(@1,Leistung L1,W,P_L1,0\n" \
    "1,1-0:56.7.0*255(@1,Leistung L2,W,P_L2,0\n" \
    "1,1-0:76.7.0*255(@1,Leistung L3,W,P_L3,0\n" \
    "1,1-0:32.7.0*255(@1,Spannung L1,V,U_L1,0\n" \
    "1,1-0:52.7.0*255(@1,Spannung L2,V,U_L2,0\n" \
    "1,1-0:72.7.0*255(@1,Spannung L3,V,U_L3,0\n\n" \
  ">T\ntempS=DS18B20#Temperature\n" \
    "tE_In=EVU#E_In*1000\ntE_Out=EVU#E_Out*1000\ntP_Cur=EVU#P_Cur\n" \
    "tP_L1=EVU#P_L1\ntP_L2=EVU#P_L2\ntP_L3=EVU#P_L3\n" \
    "tU_L1=EVU#U_L1\ntU_L2=EVU#U_L2\ntU_L3=EVU#U_L3\n" \
    "I_L1=tP_L1/tU_L1\nI_L2=tP_L2/tU_L2\nI_L3=tP_L3/tU_L3\n\n" \
  ">S\nmF=255/(tempH-tempL)\n" \
    "if tempS<=tempL\nthen\npwmV=0\nendif\n" \
    "if tempS>tempH\nthen\npwmV=255\nendif\n" \
    "if (tempS>tempL and tempS<=tempH)\nthen\npwmV=(tempS-tempL)*mF\nendif\n" \
    "->PWM1 %pwmV%\n" \
    "=>Publish %topic%W %0tP_Cur%\n=>Publish %topic%WhImported %tE_In%\n=>Publish %topic%WhExported %tE_Out%\n" \
    "=>Publish %topic%WPhase1 %tP_L1%\n=>Publish %topic%WPhase2 %tP_L2%\n=>Publish %topic%WPhase3 %tP_L3%\n" \
    "=>Publish %topic%VPhase1 %tU_L1%\n=>Publish %topic%VPhase2 %tU_L2%\n=>Publish %topic%VPhase3 %tU_L3%\n" \
    "=>Publish %topic%APhase1 %I_L1%\n=>Publish %topic%APhase2 %I_L2%\n=>Publish %topic%APhase3 %I_L3%\n\n" \
  ">W\n@PWM-Wert:&emsp;&emsp;&emsp;&emsp;&emsp;%0pwmV%\n" \
    "EVU Strom L1&emsp;&emsp;&emsp;&emsp;%I_L1% A\n" \
    "EVU Strom L2&emsp;&emsp;&emsp;&emsp;%I_L2% A\n" \
    "EVU Strom L3&emsp;&emsp;&emsp;&emsp;%I_L3% A\n"

/*
SetOption64 	Switch between - or _ as sensor name separator
      0 = sensor name index separator is - (hyphen) (default)
      1 = sensor name index separator is _ (underscore)
          Affects DS18X20, DHT, BMP and SHT3X sensor names in tele messages
*/
// 1712 Zeichen Skript; 6514 Zeichen übrig von 8192
#endif // MY_SCRIPT

#ifdef USER_TEMPLATE
#undef USER_TEMPLATE
#endif

#ifdef ESP8266
#define USER_TEMPLATE "{\"NAME\":\"mbtcp-gate\",\"GPIO\":[1312,0,544,0,0,0,0,0,9312,8768,8800,416,0,0],\"FLAG\":0,\"BASE\":18,\"CMND\":\"Module 0\"}"  // [Template] Set JSON template
// https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp8266-pinout-reference-gpios
// D:\Users\Günter\Documents\Elektronik\ESP32\__Dokumentation\ESP8266_D1-mini-pinout.pdf
// GPIO0  Taster gegen GND (kann damit auch zum FlashBoot benutzt werden) -- 1312   // DS18x20 1-wire & Taster nur intern zum FlashBoot
// GPIO1  TX UART0                                                        -- 0      // SML data
// GPIO2  hat die interne LED gegen VCC; Funktion LedLink (544; _i: 576)  -- 544    // LedLink
// GPIO3  RX UART0                                                        -- 0      // SML data
// GPIO4  I2C SDA (640)                                                   -- 0      // 
// GPIO5  I2C SCL (608)                                                   -- 0      // 
// GPIO9  DO NOT USE!!                                                    -- 0      // DO NOT USE!!
// GPIO10 DO NOT USE!!                                                    -- 0      // DO NOT USE!!
// GPIO12 SPI MISO (672)                                                  -- 9312   // ModBr Tx Ena
// GPIO13 SPI MOSI (704)                                                  -- 8768   // ModBr Tx (+ LED rt.)
// GPIO14 SPI CLK  (736)                                                  -- 8800   // ModBr Rx (+ LED rt.)
// GPIO15 SPI SS (768) - SDCard CS (6240)                                 -- 416    // PWM1 (PWM_i1: 448)
// GPIO16 (wake-up aus dem deep-sleep Modus: 4096)                        -- 0      // 
// GPIO17 ist der AD0 (CT Power: 4896)                                    -- 0      // 
//
// Tasmota SML verwendet den Hardware UART0; eine entsprechende Konfiguration der GPIO ist nicht nötig.
// 
// hawa: xsns_02_analog.ino Zeile 482 aktivieren zum logging der ADC Werte
#define hawa_LOG               false
#define USE_UFILESYS
#define UFSYS_SIZE 8192
#endif    // ESP8266

#ifdef LUATOS_ESP32C3     // Luatos-ESP32C3 board mit AIR101-LCD Modul
/*      https://tasmota.github.io/docs/Displays/#descriptor-file & https://github.com/arendst/Tasmota/discussions/18350      */
#define DSP_ROM_DESC \
  ":H,ST7735S,160,80,16,SPI,1,7,2,3,6,11,10,*,16\n" \
  ":S,2,1,1,0,30,30\n" \
  ":I\n" \
  "01,80\n" \
  "11,80\n" \
  "B1,3,01,2C,2D\n" \
  "B2,3,01,2C,2D\n" \
  "B3,6,01,2C,2D,01,2C,2D\n" \
  "B4,1,07\n" \
  "C0,3,A2,04,84\n" \
  "C1,1,C5\n" \
  "C2,2,0A,00\n" \
  "C3,2,8A,2A\n" \
  "C4,2,8A,EE\n" \
  "C5,1,0E\n" \
  "20,0\n" \
  "36,1,C8\n" \
  "3A,1,05\n" \
  "2A,4,00,02,00,7F\n" \
  "2B,4,00,01,00,7F\n" \
  "E0,10,02,1C,07,12,37,32,29,2D,29,25,2B,39,00,01,03,10\n" \
  "E1,10,03,1D,07,06,2E,2C,29,2D,2E,2E,37,3F,00,00,02,10\n" \
  "13,80\n" \
  "29,80\n" \
  ":o,28\n" \
  ":O,29\n" \
  ":A,2A,2B,2C,16\n" \
  ":R,36\n" \
  ":0,60,00,18,00\n" \
  ":i,20,21\n" \
  ":B,60,0\n" \
  "#\n"

#define USER_TEMPLATE "{\"NAME\":\"esp32-solar\",\"GPIO\":[4736,4737,736,704,1,1,800,768,1,1,8736,992,544,1,0,0,0,0,6210,1312,0,0],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://www.studiopieters.nl/esp32-c3-pinout/
  GPIO0 ADC0 U1TXD                                                       -- 4736   // ADC Temp1 Analog Thermistor
  GPIO1 ADC1 U1RXD                                                       -- 4737   // ADC Temp2 Analog Thermistor
  GPIO2 ADC2                                             AIR101-LCD SCL  -- 736    // SPI CLK1 	Hardware SPI
  GPIO3 ADC3                                             AIR101-LCD SCA  -- 704    // SPI MOSI1 Hardware SPI
  GPIO4 ADC4 I2C_SDA                                     AIR101-Btn Ent. -- 1      // USER
  GPIO5 ADC5 I2C_SCL                                     AIR101-Btn L    -- 1      // USER
  GPIO6                                                  AIR101-LCD DC   -- 800    // SPI DC1 	Hardware SPI
  GPIO7                                                  AIR101-LCD CS   -- 768    // SPI CS1 	Hardware SPI
  GPIO8                                                  AIR101-Btn R    -- 1      // USER
  GPIO9                                                  AIR101-Btn U    -- 1      // USER
  GPIO10                                                 AIR101-LCD RES  -- 8736   // Reset 	  Generic reset
  GPIO11                                                 AIR101-LCD BL   -- 992 	 // Backlight Display backlight control
  GPIO12 LED-D4 LedLink (544; _i: 576)                                   -- 544    // 
  GPIO13 LED-D5 PWM_1 (416)                              AIR101-Btn D    -- 1      // USER
  GPIO14 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO15 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO16 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO17 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO18                                                                 -- 6210   // OptionA3 	Specific device options to be served in code
  GPIO19                                                                 -- 1312   // DS18x20 	DS18B20 or DS18S20
  GPIO20 U0RXD                                                           -- 0      // 
  GPIO21 U0TXD                                                           -- 0      // 
Ausrichtung AIR101-LCD mit Display quer und Eingabe-Stick rechts; die Button-Bezeichnung ist oben angepaßt!
*/

#ifndef USE_SPI
#define USE_SPI
#endif

#ifndef USE_DISPLAY
#define USE_DISPLAY
/*    https://tasmota.github.io/docs/Displays/#universal-display-driver   */
#define USE_UNIVERSAL_DISPLAY                   // New universal display driver for both I2C and SPI
#endif

// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
#define hawa_LOG               false
#endif    // LUATOS_ESP32C3

#ifdef ESP32      // Baustelle!
// #define USER_TEMPLATE "{\"NAME\":\"Luatos CORE-ESP32\",\"GPIO\":[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
#define hawa_LOG               false
#endif    // ESP32

#define USE_MODBUS_BRIDGE                        // Add support for software Modbus Bridge (+4.5k code)
#define USE_MODBUS_BRIDGE_TCP                    // Add support for software Modbus TCP Bridge (also enable Modbus TCP Bridge) (+2k code)
#define MODBUS_BRIDGE_TCP_DEFAULT_PORT 502       // Add support for software Modbus TCP Bridge (start the TCP bridge automatically at PORT 502)

#ifndef USE_DS18x20
#define USE_DS18x20                              // Add support for DS18x20 sensors with id sort, single scan and read retry (+2k6 code)
#endif

#ifdef DS18X20_PULL_UP
#undef DS18X20_PULL_UP
#endif
#define DS18X20_PULL_UP        false             // [SetOption74] Enable internal pullup for single DS18x20 sensor

#define USE_SML_M
#define SML_REPLACE_VARS
// #define NO_USE_SML_TCP
#define NO_USE_SML_DECRYPT

#ifdef MAX_METERS
#undef MAX_METERS
#endif
#define MAX_METERS                1

#ifdef LIGHT_MODE
#undef LIGHT_MODE
#endif
#define LIGHT_MODE             false             // [SetOption15] Switch between commands PWM or COLOR/DIMMER/CT/CHANNEL

#undef USE_DISPLAY                               // Add I2C/TM1637/MAX7219 Display Support (+2k code)
#undef USE_DISPLAY_MODES1TO5                     // Enable display mode 1 to 5 in addition to mode 0
#undef USE_DISPLAY_LCD                           // [DisplayModel 1] [I2cDriver3] Enable Lcd display (I2C addresses 0x27 and 0x3F) (+6k code)
#undef USE_DISPLAY_SSD1306                       // [DisplayModel 2] [I2cDriver4] Enable SSD1306 Oled 128x64 display (I2C addresses 0x3C and 0x3D) (+16k code)
#undef USE_DISPLAY_MATRIX                        // [DisplayModel 3] [I2cDriver5] Enable 8x8 Matrix display (I2C adresseses see below) (+11k code)
#undef USE_DISPLAY_SEVENSEG                      // [DisplayModel 11] [I2cDriver47] Enable sevenseg display (I2C 0x70-0x77) (<+11k code)
#undef USE_ADE7953
#undef SHOW_SPLASH

#define GUI_EDIT_FILE
#define GUI_TRASH_FILE

#ifdef TELE_PERIOD
#undef TELE_PERIOD
#endif
#define TELE_PERIOD             300              // [TelePeriod] Telemetry (0 = disable, 10 - 3600 seconds)

#ifdef MODULE
#undef MODULE
#endif
#define MODULE                 USER_MODULE

#ifdef FRIENDLY_NAME
#undef FRIENDLY_NAME
#endif
#define FRIENDLY_NAME          PROJECT

#ifdef GUI_SHOW_HOSTNAME
#undef GUI_SHOW_HOSTNAME
#endif
#define GUI_SHOW_HOSTNAME      true

#ifdef APP_TIMEZONE
#undef APP_TIMEZONE
#endif
#define APP_TIMEZONE           99     // https://tasmota-tz.netlify.app/

#ifdef MY_LANGUAGE
#undef MY_LANGUAGE
#endif
#define MY_LANGUAGE            de_DE

#ifdef MQTT_USE
#undef MQTT_USE
#endif
#define MQTT_USE               true

#ifdef MQTT_TOPIC
#undef MQTT_TOPIC
#endif
#define MQTT_TOPIC             "openWB/set/evu/"

#ifdef MQTT_FULLTOPIC
#undef MQTT_FULLTOPIC
#endif
#define MQTT_FULLTOPIC         PROJECT

// #ifndef SUPPORT_MQTT_EVENT
// #define SUPPORT_MQTT_EVENT                     // Support trigger event with MQTT subscriptions (+3k5 code)
// #endif

#ifdef USE_DOMOTICZ
#undef USE_DOMOTICZ                              
#endif 

#ifdef USE_EMULATION_HUE
#undef USE_EMULATION_HUE
#endif

#ifdef USE_EMULATION_WEMO
#undef USE_EMULATION_WEMO
#endif

#ifdef USE_TELEGRAM
#undef USE_TELEGRAM
#endif

#ifdef USE_KNX
#undef USE_KNX
#endif

#ifdef USE_SONOFF_RF
#undef USE_SONOFF_RF
#endif

#ifdef ROTARY_V1
#undef ROTARY_V1
#endif

#ifdef USE_SONOFF_SC
#undef USE_SONOFF_SC
#endif

#ifdef USE_TUYA_MCU
#undef USE_TUYA_MCU
#endif

#ifdef USE_ARMTRONIX_DIMMERS
#undef USE_ARMTRONIX_DIMMERS
#endif

#ifdef USE_PS_16_DZ
#undef USE_PS_16_DZ
#endif

#ifdef USE_SONOFF_IFAN
#undef USE_SONOFF_IFAN
#endif

#ifdef USE_BUZZER
#undef USE_BUZZER
#endif

#ifdef USE_ARILUX_RF
#undef USE_ARILUX_RF
#endif

#ifdef USE_SHUTTER
#undef USE_SHUTTER
#endif

#ifdef USE_EXS_DIMMER
#undef USE_EXS_DIMMER
#endif

#ifdef USE_DEVICE_GROUPS
#undef USE_DEVICE_GROUPS
#endif

#ifdef USE_PWM_DIMMER
#undef USE_PWM_DIMMER
#endif

#ifdef USE_SONOFF_D1
#undef USE_SONOFF_D1
#endif

#ifdef USE_SHELLY_DIMMER
#undef USE_SHELLY_DIMMER
#endif

#ifdef USE_LIGHT
#undef USE_LIGHT
#endif

#ifdef USE_WS2812
#undef USE_WS2812
#endif

#ifdef USE_MY92X1
#undef USE_MY92X1
#endif

#ifdef USE_SM16716
#undef USE_SM16716
#endif

#ifdef USE_SM2135
#undef USE_SM2135
#endif

#ifdef USE_SM2335
#undef USE_SM2335
#endif

#ifdef USE_BP1658CJ
#undef USE_BP1658CJ
#endif

#ifdef USE_BP5758D
#undef USE_BP5758D
#endif

#ifdef USE_SONOFF_L1
#undef USE_SONOFF_L1
#endif

#ifdef USE_ELECTRIQ_MOODL
#undef USE_ELECTRIQ_MOODL
#endif

#ifdef USE_LIGHT_PALETTE
#undef USE_LIGHT_PALETTE
#endif

#ifdef USE_LIGHT_VIRTUAL_CT
#undef USE_LIGHT_VIRTUAL_CT
#endif

#ifdef USE_DGR_LIGHT_SEQUENCE
#undef USE_DGR_LIGHT_SEQUENCE
#endif

// #ifdef USE_DS18x20
// #undef USE_DS18x20
// #endif

#ifdef USE_I2C
#undef USE_I2C
#endif

#ifndef LUATOS_ESP32C3
#ifdef USE_SPI
#undef USE_SPI
#endif
#endif    // LUATOS_ESP32C3

#ifdef USE_SERIAL_BRIDGE
#undef USE_SERIAL_BRIDGE
#endif

#ifdef USE_ENERGY_SENSOR
#undef USE_ENERGY_SENSOR
#endif

#ifdef USE_ENERGY_DUMMY
#undef USE_ENERGY_DUMMY
#endif

#ifdef USE_HLW8012
#undef USE_HLW8012
#endif

#ifdef USE_CSE7766
#undef USE_CSE7766
#endif

#ifdef USE_PZEM004T
#undef USE_PZEM004T
#endif

#ifdef USE_PZEM_AC
#undef USE_PZEM_AC
#endif

#ifdef USE_PZEM_DC
#undef USE_PZEM_DC
#endif

#ifdef USE_MCP39F501
#undef USE_MCP39F501
#endif

#ifdef USE_BL09XX
#undef USE_BL09XX
#endif

#ifdef USE_DHT
#undef USE_DHT
#endif

#ifdef USE_IR_REMOTE
#undef USE_IR_REMOTE
#endif

#endif  // _USER_CONFIG_OVERRIDE_H_
