/*
  user_config_override.h - user configuration overrides my_user_config.h for Tasmota

  Copyright (C) 2021  Theo Arends

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _USER_CONFIG_OVERRIDE_H_
#define _USER_CONFIG_OVERRIDE_H_

/*****************************************************************************************************\
 * USAGE:
 *   To modify the stock configuration without changing the my_user_config.h file:
 *   (1) copy this file to "user_config_override.h" (It will be ignored by Git)
 *   (2) define your own settings below
 *
 ******************************************************************************************************
 * ATTENTION:
 *   - Changes to SECTION1 PARAMETER defines will only override flash settings if you change define CFG_HOLDER.
 *   - Expect compiler warnings when no ifdef/undef/endif sequence is used.
 *   - You still need to update my_user_config.h for major define USE_MQTT_TLS.
 *   - All parameters can be persistent changed online using commands via MQTT, WebConsole or Serial.
\*****************************************************************************************************/

#include "user_private_data.h"               // not sharing sensible data with the global community; hawa-lc4 (M1)
// don't forget to check and modify the file above!

// #ifdef %identifier%
// #undef %identifier%
// #endif
// #define %identifier%   %the_new_value%

#ifdef PROJECT
#undef PROJECT
#endif
#define PROJECT               "wbec-gate32"

#ifdef MY_RULE
  #error **** Build: SCRIPT only ****
#endif // MY_RULE

#ifdef MY_SCRIPT
  // #warning **** Build: SCRIPT ****
  #undef CODE_IMAGE_STR
  #define CODE_IMAGE_STR "MY_SCRIPT_wbec-gate32"

  #undef USE_RULES
  #undef USE_TIMERS
  #undef USE_TIMERS_WEB
  #undef USE_SUNRISE

  #define USE_SCRIPT

  #define USE_SCRIPT_SERIAL
  #define USE_SCRIPT_TIMERS
  // #define USE_SCRIPT_SUB_COMMAND
  #define USE_SCRIPT_GLOBVARS
  // #define USE_SCRIPT_JSON_EXPORT
  #define USE_SCRIPT_WEB_DISPLAY
  #define USE_BUTTON_EVENT
  #define SCRIPT_POWER_SECTION
  #define START_SCRIPT_FROM_BOOT      // https://tasmota.github.io/docs/Scripting-Language/
  #define USER_BACKLOG "Script 1"     // hier nur script aktivieren, sonst nichts! Siehe https://tasmota.github.io/docs/Compile-your-build/#user_backlog

#define PRECONFIGURED_SCRIPT \
  ">D 48\nt:TCPdelay=7\n\n" \
  ">B\n->WiFi 0\n" \
    "->SetOption73 1\n->SwitchMode 5\n->SetOption32 30\n" \
    "->ModbusBaudrate 19200\n->ModbusSerialConfig 8E1\n\n" \
  ">R\n=>Hostname wbec-gate\n\n" \
  ">S\nif TCPdelay==0 {\n=>ModbusTCPStart 5021\nTCPdelay=-1\n}\n"

// 106 Zeichen Skript; 8086 Zeichen übrig von 8192
#endif // MY_SCRIPT

#ifdef USER_TEMPLATE
#undef USER_TEMPLATE
#endif

#ifdef ESP32
#ifdef USE_BERRY
#undef USE_BERRY
#endif
// #define USE_BERRY_DEBUG             // Compile Berry bytecode with line number information, makes exceptions easier to debug. Adds +8% of memory consumption for compiled code

//  template GPIO pin mapping:  https://github.com/arendst/Tasmota/discussions/19000
//  User Template ScratchPad:  [0,1,2,3,4,5,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,6,7,8,11,32,33,34,35,36,37,38,39]
//                            "NAME":"WT32-ETH01","GPIO":[0,0,1,0,1,   1,0,0,1,0,1,1,5536,   1,5600,0,0,0,0,5568,0,0,0,0,0,0,0,0,1,   1,0,1,1,0,0,1],"FLAG":0,"BASE":1
#define USER_TEMPLATE "{\"NAME\":\"WT32-ETH01\",\"GPIO\":[0,0,1,0,1,9440,0,0,1,0,1,1,5536,9408,5600,0,0,0,0,5568,0,0,0,0,0,0,0,0,1,9952,0,1,1,0,0,1],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
// erstes Template für RS485-to-UART adapter, zweites Template für standard RS485 Adapter mit TX-enable Pin
/* https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
         xdrv_82_esp32_ethernet                   https://templates.blakadder.com/wireless_tag_WT32-ETH01.html
  GPIO00 Brücke gegen GND (kann damit auch zum FlashBoot benutzt werden) -- 0      // Ethernet EMAC_REF_CLK and FlashBoot
  GPIO01 TX UART0                                                        -- 0      // 
  GPIO02                                                                 -- 1      // 
  GPIO03 RX UART0                                                        -- 0      // 
  GPIO04                                                                 -- 1      // 
  GPIO05 RX UART2       (interne LED gn.)                                -- 9440   // RS485 Rx
  GPIO09 DO NOT USE!!   (SDData2)                                        -- 0      // DO NOT USE!!
  GPIO10 DO NOT USE!!   (SDData3)                                        -- 0      // DO NOT USE!!
  GPIO12 HSPI MISO                                                       -- 1      // 
  GPIO13 HSPI MOSI                                                       -- 0      // Ethernet EMAC_RX_ER
  GPIO14 HSPI CLK                                                        -- 1      // 
  GPIO15 HSPI CS0                                                        -- 1      // 
  GPIO16                                                                 -- 5536   // Output Hi (3840) oder ETH POWER (5536) - Ethernet OSC_ENA
  GPIO17 TX UART2       (interne LED gn.)                                -- 9408   // RS485 Tx
  GPIO18 VSPI CLK                                                        -- 5600   // Ethernet MDIO
  GPIO19 VSPI MISO                                                       -- 0      // Ethernet TXD0
  GPIO20 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO21 I2C SDA (640)                                                   -- 0      // Ethernet EMAC_TX_EN
  GPIO22 I2C SCL (608)                                                   -- 0      // Ethernet EMAC_TXD1
  GPIO23 VSPI MOSI                                                       -- 5568   // Ethernet MDC
  GPIO24 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO25                                                                 -- 0      // Ethernet EMAC_RXD0
  GPIO26                                                                 -- 0      // Ethernet EMAC_RXD1
  GPIO27                                                                 -- 0      // Ethernet EMAC_RX_DV
  GPIO06 DO NOT USE!!   (SDCLK)                                          -- 0      // DO NOT USE!!
  GPIO07 DO NOT USE!!   (SDData0)                                        -- 0      // DO NOT USE!!
  GPIO08 DO NOT USE!!   (SDData1)                                        -- 0      // DO NOT USE!!
  GPIO11 DO NOT USE!!   (SDCMD)                                          -- 0      // DO NOT USE!!
  GPIO32 CFG                                                             -- 1      // 
  GPIO33 485_EN                                                          -- 9952   // ModBr Tx Ena
  GPIO34 (input only)                                                    -- 0      // auf WT32-ETH01 nicht verfügbar
  GPIO35 (input only)                                                    -- 1      // 
  GPIO36 (input only)                                                    -- 1      // 
  GPIO37 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO38 Nicht verfügbar auf den meisten Boards                          -- 0      // Nicht verfügbar auf den meisten Boards
  GPIO39 (input only)                                                    -- 1      // 
                                                                            "9952":"ModBr Tx Ena","9408":"ModBr Tx","9440":"ModBr Rx"
Nicht jedes Board hat alle GPIOs verfügbar!
  GPIO00 fehlt auf dem DEVKIT V1 – DOIT 30-Pin Board und ist nur durch den boot-Taster am Board bedienbar.
  Das DEVKIT V1 – DOIT 30-Pin Board verwendest Standardmäßig den VSPI.
Aufpassen bei VSPI und HSPI; die sind nicht immmer auf allen Boards gleich definiert! VSPI ist üblicherweise der Standard SPI Bus.
Strapping Pins:   The ESP32 chip has the following strapping pins:
    GPIO 0 (must be LOW to enter boot mode)
    GPIO 2 (must be floating or LOW during boot)
    GPIO 5 (must be HIGH during boot)
    GPIO 12 (must be LOW during boot)
    GPIO 15 (must be HIGH during boot)
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
// #define ADC_LOG

#ifdef MY_ETH01
  #define USE_ETHERNET                             // Add support for ethernet (+20k code)
  #define USE_WT32_ETH01                           // Add support for Wireless-Tag WT32-ETH01

  #ifdef ETH_TYPE
  #undef ETH_TYPE
  #endif
  #define ETH_TYPE          0                      // LAN8720

  #ifdef ETH_CLKMODE
  #undef ETH_CLKMODE
  #endif
  #define ETH_CLKMODE       0                      // [EthClockMode] 0 = ETH_CLOCK_GPIO0_IN, 1 = ETH_CLOCK_GPIO0_OUT, 2 = ETH_CLOCK_GPIO16_OUT, 3 = ETH_CLOCK_GPIO17_OUT

  #ifdef ETH_ADDRESS
  #undef ETH_ADDRESS
  #endif
  #define ETH_ADDRESS       1                      // [EthAddress] 0 = PHY0 .. 31 = PHY31
#endif    // MY_ETH01
#else
  #error **** Build: ESP32 only! ****
#endif    // ESP32

#define USE_MODBUS_BRIDGE                        // Add support for software Modbus Bridge (+4.5k code)
#define USE_MODBUS_BRIDGE_TCP                    // Add support for software Modbus TCP Bridge (also enable Modbus TCP Bridge) (+2k code)
/* das folgende NICHT für WT32-ETH01 nutzen! Führt unweigerlich zum Absturz des Programms.
// #define MODBUS_BRIDGE_TCP_DEFAULT_PORT 502       // Add support for software Modbus TCP Bridge (start the TCP bridge automatically at PORT 502)
  die Modbus TCP Bridge muß verzögert über script gestartet werden!
*/

#undef USE_DISPLAY                               // Add I2C/TM1637/MAX7219 Display Support (+2k code)
#undef USE_DISPLAY_MODES1TO5                     // Enable display mode 1 to 5 in addition to mode 0
#undef USE_DISPLAY_LCD                           // [DisplayModel 1] [I2cDriver3] Enable Lcd display (I2C addresses 0x27 and 0x3F) (+6k code)
#undef USE_DISPLAY_SSD1306                       // [DisplayModel 2] [I2cDriver4] Enable SSD1306 Oled 128x64 display (I2C addresses 0x3C and 0x3D) (+16k code)
#undef USE_DISPLAY_MATRIX                        // [DisplayModel 3] [I2cDriver5] Enable 8x8 Matrix display (I2C adresseses see below) (+11k code)
#undef USE_DISPLAY_SEVENSEG                      // [DisplayModel 11] [I2cDriver47] Enable sevenseg display (I2C 0x70-0x77) (<+11k code)
#undef USE_ADE7953
#undef SHOW_SPLASH

#define GUI_EDIT_FILE
#define GUI_TRASH_FILE

#ifdef TELE_PERIOD
#undef TELE_PERIOD
#endif
#define TELE_PERIOD             300              // [TelePeriod] Telemetry (0 = disable, 10 - 3600 seconds)

#ifdef MODULE
#undef MODULE
#endif
#define MODULE                 USER_MODULE

#ifdef FRIENDLY_NAME
#undef FRIENDLY_NAME
#endif
#define FRIENDLY_NAME          PROJECT

#ifdef GUI_SHOW_HOSTNAME
#undef GUI_SHOW_HOSTNAME
#endif
#define GUI_SHOW_HOSTNAME      true

#ifdef APP_TIMEZONE
#undef APP_TIMEZONE
#endif
#define APP_TIMEZONE           99     // https://tasmota-tz.netlify.app/

#ifdef MY_LANGUAGE
#undef MY_LANGUAGE
#endif
#define MY_LANGUAGE            de_DE

#ifdef MQTT_USE
#undef MQTT_USE
#endif
#define MQTT_USE               true   // SetOption3 ON/OFF

#ifdef MQTT_TOPIC
#undef MQTT_TOPIC
#endif
#define MQTT_TOPIC             "openWB/set/evu/"

#ifdef MQTT_FULLTOPIC
#undef MQTT_FULLTOPIC
#endif
#define MQTT_FULLTOPIC         PROJECT

// #ifndef SUPPORT_MQTT_EVENT
// #define SUPPORT_MQTT_EVENT                     // Support trigger event with MQTT subscriptions (+3k5 code)
// #endif

#ifdef USE_DOMOTICZ
#undef USE_DOMOTICZ                              
#endif 

#ifdef USE_EMULATION_HUE
#undef USE_EMULATION_HUE
#endif

#ifdef USE_EMULATION_WEMO
#undef USE_EMULATION_WEMO
#endif

#ifdef USE_TELEGRAM
#undef USE_TELEGRAM
#endif

#ifdef USE_KNX
#undef USE_KNX
#endif

#ifdef USE_SONOFF_RF
#undef USE_SONOFF_RF
#endif

#ifdef ROTARY_V1
#undef ROTARY_V1
#endif

#ifdef USE_SONOFF_SC
#undef USE_SONOFF_SC
#endif

#ifdef USE_TUYA_MCU
#undef USE_TUYA_MCU
#endif

#ifdef USE_ARMTRONIX_DIMMERS
#undef USE_ARMTRONIX_DIMMERS
#endif

#ifdef USE_PS_16_DZ
#undef USE_PS_16_DZ
#endif

#ifdef USE_SONOFF_IFAN
#undef USE_SONOFF_IFAN
#endif

#ifdef USE_BUZZER
#undef USE_BUZZER
#endif

#ifdef USE_ARILUX_RF
#undef USE_ARILUX_RF
#endif

#ifdef USE_SHUTTER
#undef USE_SHUTTER
#endif

#ifdef USE_EXS_DIMMER
#undef USE_EXS_DIMMER
#endif

#ifdef USE_DEVICE_GROUPS
#undef USE_DEVICE_GROUPS
#endif

#ifdef USE_PWM_DIMMER
#undef USE_PWM_DIMMER
#endif

#ifdef USE_SONOFF_D1
#undef USE_SONOFF_D1
#endif

#ifdef USE_SHELLY_DIMMER
#undef USE_SHELLY_DIMMER
#endif

#ifdef USE_LIGHT
#undef USE_LIGHT
#endif

#ifdef USE_WS2812
#undef USE_WS2812
#endif

#ifdef USE_MY92X1
#undef USE_MY92X1
#endif

#ifdef USE_SM16716
#undef USE_SM16716
#endif

#ifdef USE_SM2135
#undef USE_SM2135
#endif

#ifdef USE_SM2335
#undef USE_SM2335
#endif

#ifdef USE_BP1658CJ
#undef USE_BP1658CJ
#endif

#ifdef USE_BP5758D
#undef USE_BP5758D
#endif

#ifdef USE_SONOFF_L1
#undef USE_SONOFF_L1
#endif

#ifdef USE_ELECTRIQ_MOODL
#undef USE_ELECTRIQ_MOODL
#endif

#ifdef USE_LIGHT_PALETTE
#undef USE_LIGHT_PALETTE
#endif

#ifdef USE_LIGHT_VIRTUAL_CT
#undef USE_LIGHT_VIRTUAL_CT
#endif

#ifdef USE_DGR_LIGHT_SEQUENCE
#undef USE_DGR_LIGHT_SEQUENCE
#endif

#ifdef USE_DS18x20
#undef USE_DS18x20
#endif

#ifdef USE_I2C
#undef USE_I2C
#endif

#ifndef LUATOS_ESP32C3
#ifdef USE_SPI
#undef USE_SPI
#endif
#endif    // LUATOS_ESP32C3

#ifdef USE_SERIAL_BRIDGE
#undef USE_SERIAL_BRIDGE
#endif

#ifdef USE_ENERGY_SENSOR
#undef USE_ENERGY_SENSOR
#endif

#ifdef USE_ENERGY_DUMMY
#undef USE_ENERGY_DUMMY
#endif

#ifdef USE_HLW8012
#undef USE_HLW8012
#endif

#ifdef USE_CSE7766
#undef USE_CSE7766
#endif

#ifdef USE_PZEM004T
#undef USE_PZEM004T
#endif

#ifdef USE_PZEM_AC
#undef USE_PZEM_AC
#endif

#ifdef USE_PZEM_DC
#undef USE_PZEM_DC
#endif

#ifdef USE_MCP39F501
#undef USE_MCP39F501
#endif

#ifdef USE_BL09XX
#undef USE_BL09XX
#endif

#ifdef USE_DHT
#undef USE_DHT
#endif

#ifdef USE_IR_REMOTE
#undef USE_IR_REMOTE
#endif

#endif  // _USER_CONFIG_OVERRIDE_H_
