/*
  user_config_override.h - user configuration overrides my_user_config.h for Tasmota

  Copyright (C) 2021  Theo Arends

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _USER_CONFIG_OVERRIDE_H_
#define _USER_CONFIG_OVERRIDE_H_

/*****************************************************************************************************\
 * USAGE:
 *   To modify the stock configuration without changing the my_user_config.h file:
 *   (1) copy this file to "user_config_override.h" (It will be ignored by Git)
 *   (2) define your own settings below
 *
 ******************************************************************************************************
 * ATTENTION:
 *   - Changes to SECTION1 PARAMETER defines will only override flash settings if you change define CFG_HOLDER.
 *   - Expect compiler warnings when no ifdef/undef/endif sequence is used.
 *   - You still need to update my_user_config.h for major define USE_MQTT_TLS.
 *   - All parameters can be persistent changed online using commands via MQTT, WebConsole or Serial.
\*****************************************************************************************************/

// Not Used Here! #include "user_private_data.h"               // not sharing sensible data with the global community; hawa-lc4
// don't forget to check and modify the file above!

// #ifdef %identifier%
// #undef %identifier%
// #endif
// #define %identifier%   %the_new_value%

#ifdef PROJECT
#undef PROJECT
#endif
#define PROJECT               "il-vento"
#define PROJECT_SPEC          1

#ifdef MY_RULE
  #error **** Build: SCRIPT only! ****
#endif // MY_RULE

#ifdef MY_SCRIPT
  // #warning **** Build: SCRIPT ****
  #undef CODE_IMAGE_STR
  #define CODE_IMAGE_STR "T4M_SCRIPT_il-vento"

  #undef USE_RULES
  #undef USE_TIMERS
  #undef USE_TIMERS_WEB
  #undef USE_SUNRISE

  #define USE_SCRIPT

  #define USE_SCRIPT_SERIAL
  #define USE_SCRIPT_TIMERS
  // #define USE_SCRIPT_SUB_COMMAND
  #define USE_SCRIPT_GLOBVARS
  // #define USE_SCRIPT_JSON_EXPORT
  #define USE_SCRIPT_WEB_DISPLAY
  #define USE_BUTTON_EVENT
  #define SCRIPT_POWER_SECTION
  #define START_SCRIPT_FROM_BOOT      // https://tasmota.github.io/docs/Scripting-Language/
  #define USER_BACKLOG "Script 1"     // hier nur script aktivieren, sonst nichts!

  #define PRECONFIGURED_SCRIPT \
  ">D 16\nTPdelta=0.5\nTPmulti=1\nTPhyst=0.25\nHname=\"il-vento\"\nDProtate=2\n" \
    "; TPdelta, TPmulti, TPhyst, Hname und DProtate koennen angepasst werden.\n" \
    "; TPdelta: lineare Abweichung des Taupunktes Innen + TPdelta zu Aussen.\n" \
    "; TPmulti: Multiplikator zur Schalterstellung, der Wert wird dann zu TPdelta addiert.\n" \
    "; TPhyst: Schalthysterese für das Relais +/- zur Differenz TP-Innen zu TP-Aussen.\n" \
    "; Hname: Host-Name des Systems.\n" \
    "; DProtate: Drehung der Displayanzeige. Wert 0 = Display unterhalb des Steckers, 2 = Display oberhalb des Steckers.\n" \
    "; Ab hier interne Variablen.\n" \
    "adjH=0\nadcR=0\nbeM=1\nt:dpON=600\ntogD=0\nipA=\"\"\ndpT=\"\"\n" \
    "teI=0\nteA=0\nhuI=0\nhuA=0\nm:tpI=0\nm:tpA=0\nprI=0\nprA=0\n\n" \
  ">B\n->SetOption64 1\n->SetOption73 1\n->DisplayRotate %DProtate%\n\n" \
  ">R\n=>Hostname %Hname%\n\n" \
  ">E\nipA=StatusNET#IPAddress\n\n" \
  ">b\ndpON=600\n\n" \
  ">T\nteI=Sens_I#Temperature\nteA=Sens_A#Temperature\n" \
    "huI=Sens_I#Humidity\nhuA=Sens_A#Humidity\n" \
    "tpI=Sens_I#DewPoint\ntpA=Sens_A#DewPoint\n" \
    "prI=Sens_I#Pressure\nprA=Sens_A#Pressure\n" \
    "adcR=ANALOG#A0\n\n" \
  ">S\nbeM=int((adcR+200)/138)\nadjH=((beM-3)*TPmulti)+TPdelta\n" \
    "if dpON<=0\nthen\ndpON=-1\n->DisplayDimmer 0\nelse\n->DisplayDimmer 10\nendif\n" \
    "if upsecs%tper==1\nthen\n+>status 5\nendif\n" \
    "if (upsecs>21 and dpON>=590)\nthen\n->DisplayFont 0\n" \
      "->DisplayText [zs1l1c1]Aussen:[l2c3]Temp.[c20]~f8C[l4c3]Feucht.[c20]%%[l6c3]Taup.[c20]~f8C[l8c3]Druck[c19]hPa[s2l1c6]%1teA%[l2c6]%1huA%[l3c6]%1tpA%[l4c6]%0prA%\n" \
    "endif\n" \
    "if (upsecs>21 and dpON<590 and dpON>=580)\nthen\n->DisplayFont 0\n" \
      "->DisplayText [zs1l1c1]Innen:[l2c3]Temp.[c20]~f8C[l4c3]Feucht.[c20]%%[l6c3]Taup.[c20]~f8C[l8c3]Druck[c19]hPa[s2l1c6]%1teI%[l2c6]%1huI%[l3c6]%1tpI%[l4c6]%0prI%\n" \
    "endif\n" \
    "if (upsecs<=21 or dpON<580)\nthen\n->DisplayFont 1\n" \
      "if beM==1\nthen\n->LedPower2 ON\n->Power1 OFF\ndpT=\"Manu. AUS \"\nendif\n" \
      "if beM==2\nthen\n->LedPower2 ON\n->Power1 ON\ndpT=\"Manu. AN  \"\nendif\n" \
      "if beM>=3\nthen\n->LedPower2 OFF\n" \
        "if tpI>tpA+adjH+TPhyst\nthen\n->Power1 ON\nendif\n" \
        "if tpI<tpA+adjH-TPhyst\nthen\n->Power1 OFF\nendif\n" \
        "dpT=\"Diff +\"\ndpT+=s(1adjH)\n" \
      "endif\n" \
      "if upsecs%3==1\nthen\n" \
        "->DisplayText [zs1l1c1]Taupunkt[l2c4]Aussen[l3c1]%dpT%[l4c4] Innen[s2l1c6]%1tpA%[l2c6]%1tpI%\n" \
        "if togD==0\nthen\n->DisplayText [s1l5c1]%tstamp%\ntogD=1\nelse\n->DisplayText [s1l5c1]%ipA%\ntogD=0\nendif\n" \
      "endif\n" \
    "endif\n\n" \
  ">W\nDisplay noch %0dpON% Sekunden an\n"
/*    2190 Zeichen Skript; 6002 Zeichen übrig von 8192

SetOption64 	Switch between - or _ as sensor name separator
    0 = sensor name index separator is - (hyphen) (default)
    1 = sensor name index separator is _ (underscore)

SetOption73 	Detach buttons from relays and send multi-press and hold MQTT messages instead
    0 = disable (default)
    1 = enable

!!!!!  Anpassungen in "tasmota\tasmota_xsns_sensor\xsns_09_bmp.ino" nicht vergessen!  !!!!!
Zeile 57:           BME280 ==> Sens
Zeile 556 + ff:     bmp_address ==> A (0x76; default) bzw. I (0x77; umgelötet)

Berechnung für Lüftung: https://www.taupunkt-lueftung.de/ bzw. Abhandlung in der Wiki
*/
#endif // MY_SCRIPT

#ifdef USER_TEMPLATE
#undef USER_TEMPLATE
#endif

#ifdef ESP8266
#define USER_TEMPLATE "{\"NAME\":\"il-vento\",\"GPIO\":[32,0,544,0,640,608,0,0,0,289,0,224,0,4704],\"FLAG\":0,\"BASE\":18,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp8266-pinout-reference-gpios
  D:\Users\Günter\Documents\Elektronik\ESP32\__Dokumentation\ESP8266_D1-mini-pinout.pdf
  GPIO0  Taster gegen GND (kann damit auch zum FlashBoot benutzt werden) -- 32     // Taster zur Aktivierung Display
  GPIO1  TX UART0                                                        -- 0      // 
  GPIO2  hat die interne LED gegen VCC; Funktion LedLink (544; _i: 576)  -- 544    // LedLink
  GPIO3  RX UART0                                                        -- 0      // 
  GPIO4  I2C SDA (640)                                                   -- 640    // Display und Sensoren
  GPIO5  I2C SCL (608)                                                   -- 608    // Display und Sensoren
  GPIO9  DO NOT USE!!                                                    -- 0      // DO NOT USE!!
  GPIO10 DO NOT USE!!                                                    -- 0      // DO NOT USE!!
  GPIO12 SPI MISO (672)                                                  -- 0      // 
  GPIO13 SPI MOSI (704)                                                  -- 289    // Led2: Anzeige für Stellung Manuell|Automatik;  LED rt.
  GPIO14 SPI CLK  (736)                                                  -- 0      // 
  GPIO15 SPI SS (768) - SDCard CS (6240)                                 -- 224    // Relais1: Schaltrelais für Lüfter + LED ge.
  GPIO16 (wake-up aus dem deep-sleep Modus: 4096)                        -- 0      //
  GPIO17 ist der AD0 (CT Power: 4896)                                    -- 4704 	// ADC Input:	Analog Eingang des Wahlschalters (8-Stufen)
!!  ACHTUNG:  der D1-mini hat am Eingang AD0 einen Spannungsteiler und damit eine max. Eingangsspannung von 3,3V
              der ESP8266 hat keinen Spannungsteiler und damit eine max. Eingangsspannung von 1,0V
*/
// hawa: xsns_02_analog.ino Zeile 482 aktivieren zum logging der ADC Werte
// #define ADC_LOG
#define USE_UFILESYS
#define UFSYS_SIZE 8192

#ifdef USE_SPI
#undef USE_SPI
#endif

#define USE_DISPLAY_SH1106                   // [DisplayModel 7] [I2cDriver6] Enable SH1106 Oled 128x64 display (I2C addresses 0x3C and 0x3D)

#endif    // ESP8266

#ifdef LUATOS_ESP32C3     // Luatos-ESP32C3 board mit AIR101-LCD Modul
#define DSP_ROM_DESC \
  ":H,ST7735S,160,80,16,SPI,1,7,2,3,6,11,10,*,16\n" \
  ":S,2,1,1,0,30,30\n" \
  ":I\n" \
  "01,80\n" \
  "11,80\n" \
  "B1,3,01,2C,2D\n" \
  "B2,3,01,2C,2D\n" \
  "B3,6,01,2C,2D,01,2C,2D\n" \
  "B4,1,07\n" \
  "C0,3,A2,04,84\n" \
  "C1,1,C5\n" \
  "C2,2,0A,00\n" \
  "C3,2,8A,2A\n" \
  "C4,2,8A,EE\n" \
  "C5,1,0E\n" \
  "20,0\n" \
  "36,1,C8\n" \
  "3A,1,05\n" \
  "2A,4,00,02,00,7F\n" \
  "2B,4,00,01,00,7F\n" \
  "E0,10,02,1C,07,12,37,32,29,2D,29,25,2B,39,00,01,03,10\n" \
  "E1,10,03,1D,07,06,2E,2C,29,2D,2E,2E,37,3F,00,00,02,10\n" \
  "13,80\n" \
  "29,80\n" \
  ":o,28\n" \
  ":O,29\n" \
  ":A,2A,2B,2C,16\n" \
  ":R,36\n" \
  ":0,60,00,18,00\n" \
  "i,20,21\n" \
  ":B,60,0\n" \
  "#\n"

#define USER_TEMPLATE "{\"NAME\":\"Luatos 32C3\",\"GPIO\":[1,6210,736,704,1,1,800,768,1,1,8736,0,544,1,0,0,0,0,1,1,1,1],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://www.studiopieters.nl/esp32-c3-pinout/
  GPIO0 ADC0 U1TXD                                                       -- 1      // user
  GPIO1 ADC1 U1RXD                                                       -- 6210   // OptionA3 	Specific device options to be served in code
  GPIO2 ADC2                                                             -- 736    // SPI CLK1 	Hardware SPI
  GPIO3 ADC3                                                             -- 704    // SPI MOSI1 Hardware SPI
  GPIO4 ADC4 I2C_SDA                                                     -- 1      // user
  GPIO5 ADC5 I2C_SCL                                                     -- 1      // user
  GPIO6                                                                  -- 800    // SPI DC1 	Hardware SPI
  GPIO7                                                                  -- 768    // SPI CS1 	Hardware SPI
  GPIO8                                                                  -- 1      // user
  GPIO9                                                                  -- 1      // user
  GPIO10                                                                 -- 8736   // Reset 	Generic reset
  GPIO11 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board
  GPIO12 LED-D4 LedLink                                                  -- 544    // LedLink
  GPIO13 LED-D5 PWM_1                                                    -- 1      // user
  GPIO14 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO15 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO16 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO17 NOT AVAILABLE                                                   -- 0      // is NOT AVAILABLE on this board 
  GPIO18                                                                 -- 1      // user
  GPIO19                                                                 -- 1      // user
  GPIO20 U0RXD                                                           -- 1      // user
  GPIO21 U0TXD                                                           -- 1      // user
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
#define hawa_LOG               false

#define USE_SPI                              // Hardware SPI using GPIO12(MISO), GPIO13(MOSI) and GPIO14(CLK) in addition to two user selectable GPIOs(CS and DC)

#endif    // LUATOS_ESP32C3

#ifdef ESP32      // Baustelle!
// #define USER_TEMPLATE "{\"NAME\":\"Luatos CORE-ESP32\",\"GPIO\":[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],\"FLAG\":0,\"BASE\":1,\"CMND\":\"Module 0\"}"
/* https://tasmota.github.io/docs/Components/  &  https://randomnerdtutorials.com/esp32-pinout-reference-gpios/
*/
// hawa-lc4: xsns_02_analog.ino Zeile 482 (12.5.0.2) bzw. 504 (13.2.0.2) aktivieren des logging der ADC Werte
// #define hawa_LOG               false
#endif    // ESP32

#define GUI_EDIT_FILE
#define GUI_TRASH_FILE

#ifdef TELE_PERIOD
#undef TELE_PERIOD
#endif
#define TELE_PERIOD             30           // [TelePeriod] Telemetry (0 = disable, 10 - 3600 seconds)

#define USE_I2C                              // I2C using library wire (+10k code, 0k2 mem, 124 iram)
#define USE_BMP                              // [I2cDriver10] Enable BMP085/BMP180/BMP280/BME280 sensors (I2C addresses 0x76 and 0x77) (+4k4 code)
#define USE_DISPLAY                          // Add I2C/TM1637/MAX7219 Display Support (+2k code)
#undef USE_DISPLAY_MODES1TO5                 // Enable display mode 1 to 5 in addition to mode 0
#undef USE_DISPLAY_LCD                       // [DisplayModel 1] [I2cDriver3] Enable Lcd display (I2C addresses 0x27 and 0x3F) (+6k code)
#undef USE_DISPLAY_SSD1306                   // [DisplayModel 2] [I2cDriver4] Enable SSD1306 Oled 128x64 display (I2C addresses 0x3C and 0x3D) (+16k code)
#undef USE_DISPLAY_MATRIX                    // [DisplayModel 3] [I2cDriver5] Enable 8x8 Matrix display (I2C adresseses see below) (+11k code)
#undef USE_DISPLAY_SEVENSEG                  // [DisplayModel 11] [I2cDriver47] Enable sevenseg display (I2C 0x70-0x77) (<+11k code)
#undef USE_ADE7953
#undef SHOW_SPLASH

#define USE_RTC_CHIPS                        // Enable RTC chip support and NTP server - Select only one
#define USE_DS3231                           // [I2cDriver26] Enable DS3231 RTC (I2C address 0x68) (+1k2 code)
// #define USE_RTC_ADDR  0x68                   // optional und geht nicht, siehe dazu CHANGELOG.md und Zeile 43 in xdrv_56_rtc_chips.ino
// #define RTC_NTP_SERVER                       // https://tasmota.github.io/docs/DS3231/ >> Fehler: findet eine Bibliothek NTPServer.h nicht

#ifdef MODULE
#undef MODULE
#endif
#define MODULE                 USER_MODULE

#ifdef WIFI_IP_ADDRESS
#undef WIFI_IP_ADDRESS
#endif
#define WIFI_IP_ADDRESS        "0.0.0.0"         // [IpAddress1] Set to 0.0.0.0 for using DHCP or enter a static IP address

#ifdef WIFI_GATEWAY
#undef WIFI_GATEWAY
#endif
#define WIFI_GATEWAY           "0.0.0.0"         // [IpAddress2] If not using DHCP set Gateway IP address

#ifdef WIFI_DNS
#undef WIFI_DNS
#endif
#define WIFI_DNS               "0.0.0.0"         // [IpAddress4] If not using DHCP set DNS1 IP address (might be equal to WIFI_GATEWAY)

#ifdef STA_SSID1
#undef STA_SSID1
#endif
#define STA_SSID1              ""

#ifdef STA_PASS1
#undef STA_PASS1
#endif
#define STA_PASS1              ""

#ifdef STA_SSID2
#undef STA_SSID2
#endif
#define STA_SSID2              "giggerlspeed"

#ifdef STA_PASS2
#undef STA_PASS2
#endif
#define STA_PASS2              "SuperHuhn8"

#ifdef WIFI_AP_PASSPHRASE
#undef WIFI_AP_PASSPHRASE
#endif
#define WIFI_AP_PASSPHRASE     PROJECT

#ifdef WIFI_CONFIG_TOOL
#undef WIFI_CONFIG_TOOL
#endif
// #define WIFI_CONFIG_TOOL      WIFI_MANAGER
#define WIFI_CONFIG_TOOL      WIFI_RETRY

#ifdef MQTT_USE
#undef MQTT_USE
#endif
#define MQTT_USE               false

#ifdef MQTT_TOPIC
#undef MQTT_TOPIC
#endif
#define MQTT_TOPIC             PROJECT

#ifdef MQTT_HOST
#undef MQTT_HOST
#endif
#define MQTT_HOST              ""

#ifdef FRIENDLY_NAME
#undef FRIENDLY_NAME
#endif
#define FRIENDLY_NAME          PROJECT

#ifdef GUI_SHOW_HOSTNAME
#undef GUI_SHOW_HOSTNAME
#endif
#define GUI_SHOW_HOSTNAME      true

#ifdef NTP_SERVER1
#undef NTP_SERVER1
#endif
#define NTP_SERVER1            "de.pool.ntp.org"
#ifdef NTP_SERVER2
#undef NTP_SERVER2
#endif
#define NTP_SERVER2            ""
#ifdef NTP_SERVER3
#undef NTP_SERVER3
#endif
#define NTP_SERVER3            ""

#ifdef APP_TIMEZONE
#undef APP_TIMEZONE
#endif
#define APP_TIMEZONE           99     // https://tasmota-tz.netlify.app/

#ifdef MY_LANGUAGE
#undef MY_LANGUAGE
#endif
#define MY_LANGUAGE            de_DE

#ifdef WEB_USERNAME
#undef WEB_USERNAME
#endif
#define WEB_USERNAME            "admyn"

#ifdef WEB_PASSWORD
#undef WEB_PASSWORD
#endif
// #define WEB_PASSWORD            ""

#ifdef USE_DEEPSLEEP
#undef USE_DEEPSLEEP                              
#endif 

#ifdef USE_DOMOTICZ
#undef USE_DOMOTICZ                              
#endif 

#ifdef USE_EMULATION_HUE
#undef USE_EMULATION_HUE
#endif

#ifdef USE_EMULATION_WEMO
#undef USE_EMULATION_WEMO
#endif

#ifdef USE_TELEGRAM
#undef USE_TELEGRAM
#endif

#ifdef USE_KNX
#undef USE_KNX
#endif

#ifdef USE_SONOFF_RF
#undef USE_SONOFF_RF
#endif

#ifdef ROTARY_V1
#undef ROTARY_V1
#endif

#ifdef USE_SONOFF_SC
#undef USE_SONOFF_SC
#endif

#ifdef USE_TUYA_MCU
#undef USE_TUYA_MCU
#endif

#ifdef USE_ARMTRONIX_DIMMERS
#undef USE_ARMTRONIX_DIMMERS
#endif

#ifdef USE_PS_16_DZ
#undef USE_PS_16_DZ
#endif

#ifdef USE_SONOFF_IFAN
#undef USE_SONOFF_IFAN
#endif

#ifdef USE_BUZZER
#undef USE_BUZZER
#endif

#ifdef USE_ARILUX_RF
#undef USE_ARILUX_RF
#endif

#ifdef USE_SHUTTER
#undef USE_SHUTTER
#endif

#ifdef USE_EXS_DIMMER
#undef USE_EXS_DIMMER
#endif

#ifdef USE_DEVICE_GROUPS
#undef USE_DEVICE_GROUPS
#endif

#ifdef USE_PWM_DIMMER
#undef USE_PWM_DIMMER
#endif

#ifdef USE_SONOFF_D1
#undef USE_SONOFF_D1
#endif

#ifdef USE_SHELLY_DIMMER
#undef USE_SHELLY_DIMMER
#endif

#ifdef USE_LIGHT
#undef USE_LIGHT
#endif

#ifdef USE_WS2812
#undef USE_WS2812
#endif

#ifdef USE_MY92X1
#undef USE_MY92X1
#endif

#ifdef USE_MIBLE
#undef USE_MIBLE
#endif

#ifdef USE_DISPLAY_ILI9341
#undef USE_DISPLAY_ILI9341
#endif

#ifdef USE_SM16716
#undef USE_SM16716
#endif

#ifdef USE_SM2135
#undef USE_SM2135
#endif

#ifdef USE_SM2335
#undef USE_SM2335
#endif

#ifdef USE_BP1658CJ
#undef USE_BP1658CJ
#endif

#ifdef USE_BP5758D
#undef USE_BP5758D
#endif

#ifdef USE_SONOFF_L1
#undef USE_SONOFF_L1
#endif

#ifdef USE_ELECTRIQ_MOODL
#undef USE_ELECTRIQ_MOODL
#endif

#ifdef USE_LIGHT_PALETTE
#undef USE_LIGHT_PALETTE
#endif

#ifdef USE_LIGHT_VIRTUAL_CT
#undef USE_LIGHT_VIRTUAL_CT
#endif

#ifdef USE_DGR_LIGHT_SEQUENCE
#undef USE_DGR_LIGHT_SEQUENCE
#endif

#ifdef USE_DS18x20
#undef USE_DS18x20
#endif

#ifdef USE_SERIAL_BRIDGE
#undef USE_SERIAL_BRIDGE
#endif

#ifdef USE_ENERGY_SENSOR
#undef USE_ENERGY_SENSOR
#endif

#ifdef USE_ENERGY_DUMMY
#undef USE_ENERGY_DUMMY
#endif

#ifdef USE_HLW8012
#undef USE_HLW8012
#endif

#ifdef USE_CSE7766
#undef USE_CSE7766
#endif

#ifdef USE_PZEM004T
#undef USE_PZEM004T
#endif

#ifdef USE_PZEM_AC
#undef USE_PZEM_AC
#endif

#ifdef USE_PZEM_DC
#undef USE_PZEM_DC
#endif

#ifdef USE_MCP39F501
#undef USE_MCP39F501
#endif

#ifdef USE_BL09XX
#undef USE_BL09XX
#endif

#ifdef USE_DHT
#undef USE_DHT
#endif

#ifdef USE_IR_REMOTE
#undef USE_IR_REMOTE
#endif

#endif  // _USER_CONFIG_OVERRIDE_H_
